Description: change dependencies to /usr/share/java, where necessary,
  do not copy all dependencies to build/libs (eclipse hack);
  dop not copy debian jars to /usr/share/freeplane/**;
  copy only plugin-${project.version}.jar for plugins;
  externalize debian jars with a relative path in OSGi MANIFEST.MFs
  see README.source for an explanation of the (changes to the) build system
Author: Felix Natter <fnatter@gmx.net>
Forwarded: not-needed
Last-Update: 2016-02-04
--- a/build.gradle
+++ b/build.gradle
@@ -1,6 +1,6 @@
-plugins {
-  id "nebula.ospackage" version "5.0.4"
-}
+//plugins {
+//  id "nebula.ospackage" version "5.0.4"
+//}
 
 Properties props = new Properties()
 props.load(new FileInputStream(rootDir.path + '/freeplane/src/viewer/resources/version.properties'))
@@ -36,26 +36,45 @@
 
         // this is necessary to grab both binary and source jars
         // for local (git) dependencies
-        flatDir name: 'localGitDepsRepository',
-                dirs: [rootDir.path + "/freeplane/lib",
-                       rootDir.path + "/freeplane_plugin_jsyntaxpane/lib"]
+	flatDir name: '/usr/share/java', dir: '/usr/share/java'
     }
 
 }
 
+def isDebianJar(File jar) {
+    def ret = jar.path.startsWith("/usr/share/java/") ||
+              jar.path.startsWith("/usr/share/maven-repo/")
+    return ret;
+}
+
+def relpath(File basePath, File targetPath) {
+    def relPath = ""
+    // targetPath is either '/usr/share/java/**' or '/usr/share/maven-repo/**'!
+    def commonPrefix = '/usr/share'
+    def parent = basePath
+    while (parent.path != commonPrefix) {
+        parent = parent.parentFile
+        relPath += '../'
+    }
+    def targetPathRel = targetPath.path.replaceFirst(/^${commonPrefix}/, '').substring(1)
+    relPath += targetPathRel
+}
+
 // this is used for (linux) packages, where the dependencies
 // live on the file system (/usr/share/java/*.jar on Debian):
 def externalizeJar(File jar) {
-    // do not externalize, jars are copied over to /BUILD
-    // in development workflow!
-    return "lib/${jar.name}"
+    final BUNDLE_PATH = "/usr/share/freeplane/core/org.freeplane.core/"
+    if (isDebianJar(jar)) {
+        return relpath(new File(BUNDLE_PATH), jar)
+    } else {
+        return "lib/${jar.name}"
+    }
 }
 
 // this is overridden in linux packages where this might be named
 // knopflerfish-framework.jar
 def isKnopflerfishJar(fileName) {
-    return fileName.startsWith('framework-') &&
-           fileName.endsWith('.jar');
+    return fileName == 'knopflerfish-framework.jar'
 }
 
 def filterAndExternalizePluginDependencies(runtime_files) {
@@ -91,12 +110,6 @@
       failOnError = false
     }
 
-    repositories {
-       maven  {
-        url "http://repo1.maven.org/maven2"
-       }
-    }
-
     configurations {
         lib
         compile.extendsFrom(lib)
@@ -136,7 +149,8 @@
 // and freeplane_framework needs to copy it to BUILD/framework.jar
 configure(subprojects.findAll {it.name =~ /plugin/ || it.name =~ /^freeplane$/ || it.name =~ /^freeplane_framework$/}){
     dependencies {
-        compile group: 'org.knopflerfish.kf6', name:'framework', version: '8.0.4'
+        //compile group: 'org.knopflerfish.kf6', name:'framework', version: '8.0.4'
+	compile ':knopflerfish-framework'
     }
 }
 
@@ -200,17 +214,8 @@
 
     task copyOSGiJars(type: Copy) {
         from ("$buildDir/libs") {
-            include("*.jar")
-            exclude('freeplane-' + project.version + '.jar')
-            exclude('freeplane_plugin_*-' + project.version + '.jar')
-        }
-        from (configurations.lib) {
-            include("*.jar")
-        }
-        from ('lib') {
-            include("*.jar")
-            exclude('*-sources.jar')
-        }
+	    include("plugin-${project.version}.jar")
+	}
         into(globalBin + '/plugins/' + pluginid + '/lib/')
     }
 
--- a/freeplane/build.gradle
+++ b/freeplane/build.gradle
@@ -5,8 +5,10 @@
 
 dependencies {
 	
-	mergedViewerDependencies 'org.dpolivaev.mnemonicsetter:mnemonicsetter:0.6'
-	lib ':kitfox-svg-salamander-1.1.1-p1'
+	//mergedViewerDependencies 'org.dpolivaev.mnemonicsetter:mnemonicsetter:0.6'
+	lib 'org.dpolivaev.mnemonicsetter:mnemonicsetter:0.5'
+	//lib ':kitfox-svg-salamander-1.1.1-p1'
+	lib ':svgSalamander'
 	lib 'com.github.robtimus:data-url:1.0.1'
 	lib 'com.bulenkov:darcula:2018.2'
 
@@ -17,7 +19,8 @@
             'commons-io:commons-io:2.4',
             'commons-codec:commons-codec:1.8',
             'com.jgoodies:jgoodies-forms:1.9.0',
-            'com.jgoodies:jgoodies-common:1.8.1'
+            //'com.jgoodies:jgoodies-common:1.8.1'
+	    ':idw'
 
 	lib  ('com.lightdev.app.shtm.simplyhtml:SimplyHTML:0.17.3') {
 		exclude module: 'javahelp'
@@ -27,7 +30,7 @@
  	testRuntime files('src/viewer/resources', 'src/editor/resources', 'src/external/resources')
 
     // from flatDir "localGitDepsRepository":
-    lib ':idw-gpl-1.6.1'
+    //lib ':idw-gpl-1.6.1'
 }
 
 sourceSets {
@@ -171,22 +174,23 @@
 ext.bundleActivator = 'org.freeplane.main.osgi.Activator'
 
 task copyOSGiJars(type: Copy) {
-        from ("$buildDir/libs") {
+     from ("$buildDir/libs") {
           include("*.jar")
-		  exclude('freeplane-*.jar')
-        }
-     from (configurations.lib) {
-          include("*.jar")
-		  
-     }
-     from ('lib') {
-          include("*.jar")
-          exclude('*-sources.jar')
+	  exclude('framework-*.jar')
+	  exclude('freeplane-*.jar')
      }
-	 from (project(':freeplane_mac').jar.outputs.files)
+     from (configurations.runtime.files) {
+          //include("*.jar")
+          // do not copy debian jars!
+          exclude {
+            FileTreeElement jarFileTreeElement ->
+               isDebianJar(jarFileTreeElement.file)
+          }
+        exclude('freeplane_api*.jar')
+      }
      into(globalBin + '/core/' + pluginid + '/lib/')
 }
-copyOSGiJars.dependsOn project(':freeplane_mac').jar
+//copyOSGiJars.dependsOn project(':freeplane_mac').jar
 
 task copyOSGiManifest(type: Copy) {
      from ("$buildDir/tmp/jar/") {
--- a/freeplane_plugin_jsyntaxpane/build.gradle
+++ b/freeplane_plugin_jsyntaxpane/build.gradle
@@ -4,7 +4,8 @@
     // from flatDir "localGitDepsRepository":
     // from the Debian "libjsyntaxpane-java" package:
     // https://anonscm.debian.org/cgit/pkg-java/libjsyntaxpane-java.git
-    lib ':jsyntaxpane-0.9.6~r156-7' 
+    //lib ':jsyntaxpane-0.9.6~r156-7'
+    lib ':jsyntaxpane'
 }
 
 ext.bundleExports = """\
--- a/freeplane_plugin_openmaps/build.gradle
+++ b/freeplane_plugin_openmaps/build.gradle
@@ -8,5 +8,6 @@
 dependencies {
     compile project(':freeplane')
 
-    lib 'org.openstreetmap.jmapviewer:jmapviewer:1.14'
+    //lib 'org.openstreetmap.jmapviewer:jmapviewer:1.14'
+    lib ':jmapviewer'
 }
--- a/dist.gradle
+++ b/dist.gradle
@@ -25,7 +25,7 @@
 apply from: './win.dist.gradle'
 apply from: './mac.dist.gradle'
 apply from: './src.dist.gradle'
-apply from: './linux-packages.gradle'
+//apply from: './linux-packages.gradle'
 
 // meta task
 task dist {
@@ -36,7 +36,7 @@
     dependsOn windowsPortableInstaller
     dependsOn gitinfoDist
     dependsOn historyDist
-    dependsOn freeplaneDeb
+    //dependsOn freeplaneDeb
 }
 
 // clean
--- a/freeplane_plugin_script/build.gradle
+++ b/freeplane_plugin_script/build.gradle
@@ -11,7 +11,8 @@
 		exclude group:'org.codehaus.groovy', module:'groovy-cli-commons'
 		exclude group:'org.codehaus.groovy', module:'groovy-cli-picocli'
 	}
-	lib 'org.codehaus.groovy:groovy-dateutil:2.5.4'
+	// this is not available in Debian 10's groovy 2.4.x:
+	//lib 'org.codehaus.groovy:groovy-dateutil:2.5.4'
 	lib 'org.apache.ivy:ivy:2.4.0'
 
 }
--- a/settings.gradle
+++ b/settings.gradle
@@ -3,7 +3,6 @@
         'freeplane_api',
         'freeplane_ant',
         'freeplane_framework',
-        'freeplane_mac',
         'freeplane_plugin_bugreport',
         'freeplane_plugin_formula',
         'freeplane_plugin_latex',
