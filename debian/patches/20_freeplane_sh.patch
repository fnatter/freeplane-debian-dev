--- a/freeplane_framework/script/freeplane.sh
+++ b/freeplane_framework/script/freeplane.sh
@@ -6,6 +6,13 @@
 	set -x
 fi
 
+# debug also java-wrapper
+if [ -n "${DEBUG}" ]
+then
+	DEBUG_WRAPPER=1
+	export DEBUG_WRAPPER
+fi
+
 ########## FUNCTIONS DEFINITIONS #######################################
 
 _debug() {
@@ -31,44 +38,44 @@
 
 findjava() {
 	# We try hard to find the proper 'java' command
-	if [ -n "${JAVACMD}" ] && [ -x "${JAVACMD}" ]
+	if [ -n "${JAVA_CMD}" ] && [ -x "${JAVA_CMD}" ]
 	then
-		_debug "Using \$JAVACMD to find java virtual machine."
+		_debug "Using \$JAVA_CMD to find java virtual machine."
 	elif [ -n "${JAVA_BINDIR}" ] && [ -x "${JAVA_BINDIR}/java" ]
 	then
-		JAVACMD="${JAVA_BINDIR}/java"
+		JAVA_CMD="${JAVA_BINDIR}/java"
 		_debug "Using \$JAVA_BINDIR to find java virtual machine."
 	elif [ -n "${JAVA_HOME}" ] && [ -x "${JAVA_HOME}/bin/java" ]
 	then
-		JAVACMD="${JAVA_HOME}/bin/java"
+		JAVA_CMD="${JAVA_HOME}/bin/java"
 		_debug "Using \$JAVA_HOME to find java virtual machine."
 	else
-		JAVACMD=$(which java)
-		if [ -n "${JAVACMD}" ] && [ -x "${JAVACMD}" ]
+		JAVA_CMD=$(which java)
+		if [ -n "${JAVA_CMD}" ] && [ -x "${JAVA_CMD}" ]
 		then
 			_debug "Using \$PATH to find java virtual machine."
 		elif [ -x /usr/bin/java ]
 		then
 			_debug "Using /usr/bin/java to find java virtual machine."
-			JAVACMD=/usr/bin/java
+			JAVA_CMD=/usr/bin/java
 		fi
 	fi
 
 	# if we were successful, we return 0 else we complain and return 1
-	if [ -n "${JAVACMD}" ] && [ -x "${JAVACMD}" ]
+	if [ -n "${JAVA_CMD}" ] && [ -x "${JAVA_CMD}" ]
 	then
-		_debug "Using '$JAVACMD' as java virtual machine..."
+		_debug "Using '$JAVA_CMD' as java virtual machine..."
 		if [ -n "${DEBUG}" ]
 		then
-			"$JAVACMD" -version >&2
+			"$JAVA_CMD" -version >&2
 		fi
-		if (! "${JAVACMD}" -version 2>&1 | grep -qe 'Java(TM)' -e OpenJDK)
+		if (! "${JAVA_CMD}" -version 2>&1 | grep -qe 'Java(TM)' -e OpenJDK)
 		then
 			_error "Your Java is not a derivative from Sun's code," \
 			       "=======================================" \
 			       "FREEMIND WILL MOST PROBABLY *NOT* WORK," \
 			       "=======================================" \
-			       "define JAVACMD, JAVA_BINDIR, JAVA_HOME or PATH" \
+			       "define JAVA_CMD, JAVA_BINDIR, JAVA_HOME or PATH" \
 			       "in order to point to such a VM." \
 			       "See the manpage of freeplane(1) for details."
 			JAVA_TYPE=other
@@ -78,7 +85,7 @@
 		return 0
 	else
 		_error "Couldn't find a java virtual machine," \
-		       "define JAVACMD, JAVA_BINDIR, JAVA_HOME or PATH."
+		       "define JAVA_CMD, JAVA_BINDIR, JAVA_HOME or PATH."
 		return 1
 	fi
 }
@@ -125,10 +132,16 @@
 _source /etc/freeplane/freeplanerc
 _source "${userfpdir}/freeplanerc"
 
-findjava
-if [ $? -ne 0 ]
-then
-	exit 1
+if [ -r /usr/lib/java-wrappers/java-wrappers.sh ]
+then # the Debian method
+	. /usr/lib/java-wrappers/java-wrappers.sh
+	require_java_runtime java6
+else
+	findjava
+	if [ $? -ne 0 ]
+	then
+		exit 1
+	fi
 fi
 
 output_debug_info
@@ -181,7 +194,7 @@
 	defines=-Dgnu.java.awt.peer.gtk.Graphics=Graphics2D
 fi
 _debug "Calling: "\
-"${JAVACMD}" -Xmx512m\
+"${JAVA_CMD}" -Xmx512m\
  "-Dorg.freeplane.param1=$1"\
  "-Dorg.freeplane.param2=$2"\
  "-Dorg.freeplane.param3=$3"\
@@ -194,7 +207,7 @@
  -xargs "${freedir}/props.xargs"\
  -xargs "${freedir}/init.xargs"
 ( echo "${DEBUG}" | grep -qe "exit" ) && exit 0 # do not start Freeplane
-"${JAVACMD}" -Xmx512m\
+"${JAVA_CMD}" -Xmx512m\
  "-Dorg.freeplane.param1=$1"\
  "-Dorg.freeplane.param2=$2"\
  "-Dorg.freeplane.param3=$3"\
